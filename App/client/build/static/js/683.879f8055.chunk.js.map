{"version":3,"file":"static/js/683.879f8055.chunk.js","mappings":"sQAEaA,EAAUC,EAAAA,EAAAA,OAAa,oTAevBC,EAAWD,EAAAA,EAAAA,OAAa,oTAexBE,EAAUF,EAAAA,EAAAA,OAAa,mYAiBvBG,EAAWH,EAAAA,EAAAA,OAAa,6RAgBxBI,GAAcJ,EAAAA,EAAAA,GAAOG,EAAPH,CAAgB,6H,4ECjD3C,EAbcK,IAAAA,MAAW,CACvBC,OAAO,EACPC,SAAU,MACVC,mBAAmB,EACnBC,MAAO,IACPC,kBAAkB,EAClBC,MAAO,QACPC,QAAS,SAACN,GACRA,EAAMO,iBAAiB,aAAcR,IAAAA,WACrCC,EAAMO,iBAAiB,aAAcR,IAAAA,YACvC,G,2KCXIS,E,OAAYd,EAAAA,IAAU,ooB,8CCqG5B,EA3Fe,WACb,IAAMe,GAAOC,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,EAAMF,IAAI,IAEnDG,GAAWC,EAAAA,EAAAA,MAEjB,GAAwCC,EAAAA,EAAAA,UAAS,IAAG,eAA7CC,EAAY,KAAEC,EAAe,MAEpCC,EAAAA,EAAAA,YAAU,WACJR,EAAKS,YAAcT,EAAKU,YAC1BP,EAAS,UAETI,EAAgBP,EAAKW,SAEzB,GAAG,CAACR,EAAUH,IAEd,IASMY,EAAW,yCAAG,WAClBC,GAAkD,8EAE/B,OAAnBA,EAAEC,iBAAiB,kBAGgB,QAHhB,EAGXC,EAAAA,EAAAA,OAAgBC,mBAAW,aAA3B,EAA6BC,cAAc,CAC/CN,SAAUL,IACT,KAAD,0EAEKY,EAAAA,EAAAA,KAAW,CAChBC,KAAM,QACNC,KAAM,uFACN,OAEEC,EAAO,CACXV,SAAUL,EACVgB,IAAKtB,EAAKsB,KAEZC,EAAAA,EAAAA,KAAW,2BAA4BF,GAAMG,MAAK,SAACC,GACjD,IAAIA,EAASC,KAAKC,QAQhB,OAAOT,EAAAA,EAAAA,KAAW,CAChBC,KAAM,QACNC,KAAM,sFATR9B,IAAAA,KAAU,CACR6B,KAAM,UACNC,KAAM,sFACLI,MAAK,WACNI,OAAOC,SAASC,QAClB,GAOJ,IAAG,yDACJ,gBAlCgB,sCAoCjB,OACE,SAAC/B,EAAS,WACR,6BACE,gBAAKgC,UAAU,aAAY,UACzB,8BACE,gBAAKA,UAAU,YAAW,gEAC1B,gBAAKA,UAAU,YAAW,8GAC1B,iBAAKA,UAAU,eAAc,WAC3B,kBACEC,KAAK,OACLC,OAAO,UACPC,MAAO,CAAEC,QAAS,QAClBC,SAAU,SAACvB,GAAC,OAzDN,SAACA,GAA4C,IAAD,EACxDwB,EAAgB,IAAIC,SAClB,OAARD,QAAQ,IAARA,GAAAA,EAAUE,OAAO,OAAsB,QAAhB,EAAE1B,EAAE2B,OAAOC,aAAK,aAAd,EAAiB,IAE1ClB,EAAAA,EAAAA,KAAW,wBAAyBc,GAAUb,MAAK,SAACC,GAClDlB,EAAgBkB,EAASC,KAAKgB,SAChC,GACF,CAkD+BC,CAAY9B,EAAE,KAEjC,SAAC,KAAM,CACL+B,KAAK,MACLC,OAAO,EACPC,IAAKxC,EACL4B,MAAO,CAAEa,OAAQ,sBAKzB,gBAAKhB,UAAU,eAAc,UAC3B,SAAC,KAAO,CAACiB,QAAS,SAACnC,GAAC,OAAKD,EAAYC,EAAE,EAAC,gCAKlD,C","sources":["components/UI/Button.ts","components/UI/Toast/Toast.ts","components/user/MyPage/MypageCSS.ts","components/user/MyPage/MyPage.tsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const FillBtn = styled.button`\n  background-color: #50577a;\n  color: white;\n  border-radius: 5px;\n  border: none;\n  padding: 9px 13px;\n  font-weight: bold;\n  font-size: 21px;\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px;\n\n  &:hover {\n    background-color: #464c6b;\n  }\n`;\n\nexport const LightBtn = styled.button`\n  background-color: #ffeaca;\n  color: #767474;\n  border-radius: 5px;\n  border: none;\n  padding: 6px 10px;\n  font-weight: bold;\n  font-size: 21px;\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 3px 6px, rgba(0, 0, 0, 0.1) 0px 3px 6px;\n\n  &:hover {\n    background-color: #464c6b;\n  }\n`;\n\nexport const MoreBtn = styled.button`\n  background-color: #50577a;\n  color: white;\n  border-radius: 50px;\n  border: none;\n  margin: 1rem 0 3rem 0;\n  padding: 1rem;\n  font-weight: bold;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\n    rgba(0, 0, 0, 0.3) 0px 30px 60px -30px,\n    rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;\n\n  &:hover {\n    background-color: #414763;\n  }\n`;\n\nexport const LoginBtn = styled.button`\n  border-radius: 20px;\n  padding: 10px;\n  background-color: #444c74;\n  color: white;\n  border: 1px solid black;\n  margin-top: 10px;\n  font-weight: bold;\n\n  &:hover {\n    background-color: #5c679a;\n    color: white;\n    border: 1px solid black;\n  }\n`;\n\nexport const NicknameBtn = styled(LoginBtn)`\n  margin: 0 auto;\n  margin-top: 10px;\n  margin-bottom: 15px;\n  width: auto;\n  padding: 7px 10px;\n`;\n","import Swal from \"sweetalert2\";\nimport \"../Toast/Toast.css\";\n\nconst Toast = Swal.mixin({\n  toast: true,\n  position: \"top\",\n  showConfirmButton: false,\n  timer: 2000,\n  timerProgressBar: true,\n  width: \"370px\",\n  didOpen: (toast) => {\n    toast.addEventListener(\"mouseenter\", Swal.stopTimer);\n    toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\n  },\n});\n\nexport default Toast;\n","import styled from \"@emotion/styled\";\n\nconst MypageDiv = styled.div`\n  padding: 2rem 0;\n  max-width: 850px;\n  margin: 0 auto;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  @media (max-width: 850px) {\n    width: 90%;\n  }\n\n  .avatar-box {\n    .sub-style {\n      color: white;\n      font-size: 26px;\n      text-align: center;\n      margin: 10px;\n    }\n\n    .avatar-style {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      margin-top: 3rem;\n      margin-bottom: 1rem;\n    }\n  }\n\n  .button-style {\n    display: flex;\n    justify-content: center;\n    margin-top: 1rem;\n  }\n`;\n\nexport { MypageDiv };\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport Avatar from \"react-avatar\";\nimport axios from \"axios\";\nimport firebase from \"../../../firebase\";\nimport { MypageDiv } from \"./MypageCSS\";\nimport Swal from \"sweetalert2\";\nimport { FillBtn } from \"../../UI/Button\";\nimport { RootState } from \"../../../reducer/store\";\nimport Toast from \"../../UI/Toast/Toast\";\n\nconst MyPage = () => {\n  const user = useSelector((state: RootState) => state.user);\n\n  const navigate = useNavigate();\n\n  const [currentImage, setCurrentImage] = useState(\"\");\n\n  useEffect(() => {\n    if (user.isLoading && !user.accessToken) {\n      navigate(\"/login\");\n    } else {\n      setCurrentImage(user.photoURL);\n    }\n  }, [navigate, user]);\n\n  const ImageUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const formData: any = new FormData();\n    formData?.append(\"file\", e.target.files?.[0]);\n\n    axios.post(\"/api/user/profile/img\", formData).then((response) => {\n      setCurrentImage(response.data.filePath);\n    });\n  };\n\n  const SaveProfile = async (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) => {\n    e.preventDefault();\n\n    try {\n      await firebase.auth().currentUser?.updateProfile({\n        photoURL: currentImage,\n      });\n    } catch (error) {\n      return Toast.fire({\n        icon: \"error\",\n        text: \"프로필 저장에 실패하였습니다.\",\n      });\n    }\n    const body = {\n      photoURL: currentImage,\n      uid: user.uid,\n    };\n    axios.post(\"/api/user/profile/update\", body).then((response) => {\n      if (response.data.success) {\n        Swal.fire({\n          icon: \"success\",\n          text: \"프로필 저장에 성공하였습니다.\",\n        }).then(() => {\n          window.location.reload();\n        });\n      } else {\n        return Toast.fire({\n          icon: \"error\",\n          text: \"프로필 저장에 실패하였습니다.\",\n        });\n      }\n    });\n  };\n\n  return (\n    <MypageDiv>\n      <form>\n        <div className=\"avatar-box\">\n          <label>\n            <div className=\"sub-style\">이미지를 클릭하여</div>\n            <div className=\"sub-style\">프로필 이미지를 변경할 수 있습니다!</div>\n            <div className=\"avatar-style\">\n              <input\n                type=\"file\"\n                accept=\"image/*\"\n                style={{ display: \"none\" }}\n                onChange={(e) => ImageUpload(e)}\n              />\n              <Avatar\n                size=\"150\"\n                round={true}\n                src={currentImage}\n                style={{ cursor: \"pointer\" }}\n              />\n            </div>\n          </label>\n        </div>\n        <div className=\"button-style\">\n          <FillBtn onClick={(e) => SaveProfile(e)}>저장</FillBtn>\n        </div>\n      </form>\n    </MypageDiv>\n  );\n};\n\nexport default MyPage;\n"],"names":["FillBtn","styled","LightBtn","MoreBtn","LoginBtn","NicknameBtn","Swal","toast","position","showConfirmButton","timer","timerProgressBar","width","didOpen","addEventListener","MypageDiv","user","useSelector","state","navigate","useNavigate","useState","currentImage","setCurrentImage","useEffect","isLoading","accessToken","photoURL","SaveProfile","e","preventDefault","firebase","currentUser","updateProfile","Toast","icon","text","body","uid","axios","then","response","data","success","window","location","reload","className","type","accept","style","display","onChange","formData","FormData","append","target","files","filePath","ImageUpload","size","round","src","cursor","onClick"],"sourceRoot":""}
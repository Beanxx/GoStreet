{"version":3,"file":"static/js/182.171bccb3.chunk.js","mappings":"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","sources":["components/UI/Button.ts","components/UI/Toast/Toast.ts","components/post/List/ListCSS.ts","components/post/PostCSS.ts","components/post/Detail/Detail.tsx","components/reple/RepleCSS.ts","components/reple/RepleUpload.tsx","components/reple/RepleContent.tsx","components/reple/RepleList.tsx","components/reple/RepleArea.tsx","components/post/PostArea.tsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const FillBtn = styled.button`\n  background-color: #50577a;\n  color: white;\n  border-radius: 5px;\n  border: none;\n  padding: 9px 13px;\n  font-weight: bold;\n  font-size: 21px;\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px;\n\n  &:hover {\n    background-color: #464c6b;\n  }\n`;\n\nexport const LightBtn = styled.button`\n  background-color: #ffeaca;\n  color: #767474;\n  border-radius: 5px;\n  border: none;\n  padding: 6px 10px;\n  font-weight: bold;\n  font-size: 21px;\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 3px 6px, rgba(0, 0, 0, 0.1) 0px 3px 6px;\n\n  &:hover {\n    background-color: #464c6b;\n  }\n`;\n\nexport const MoreBtn = styled.button`\n  background-color: #50577a;\n  color: white;\n  border-radius: 50px;\n  border: none;\n  margin: 1rem 0 3rem 0;\n  padding: 1rem;\n  font-weight: bold;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\n    rgba(0, 0, 0, 0.3) 0px 30px 60px -30px,\n    rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;\n\n  &:hover {\n    background-color: #414763;\n  }\n`;\n\nexport const LoginBtn = styled.button`\n  border-radius: 20px;\n  padding: 10px;\n  background-color: #444c74;\n  color: white;\n  border: 1px solid black;\n  margin-top: 10px;\n  font-weight: bold;\n\n  &:hover {\n    background-color: #5c679a;\n    color: white;\n    border: 1px solid black;\n  }\n`;\n\nexport const NicknameBtn = styled(LoginBtn)`\n  margin: 0 auto;\n  margin-top: 10px;\n  margin-bottom: 15px;\n  width: auto;\n  padding: 7px 10px;\n`;\n","import Swal from \"sweetalert2\";\nimport \"../Toast/Toast.css\";\n\nconst Toast = Swal.mixin({\n  toast: true,\n  position: \"top\",\n  showConfirmButton: false,\n  timer: 2000,\n  timerProgressBar: true,\n  width: \"370px\",\n  didOpen: (toast) => {\n    toast.addEventListener(\"mouseenter\", Swal.stopTimer);\n    toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\n  },\n});\n\nexport default Toast;\n","import styled from \"@emotion/styled\";\n\nconst ListDiv = styled.div`\n  padding: 1rem 0;\n  max-width: 850px;\n  margin: 0 auto;\n\n  @media (max-width: 850px) {\n    width: 90%;\n  }\n`;\n\nconst ListItem = styled.div`\n  width: 100%;\n  height: auto;\n  min-height: 120px;\n  margin-bottom: 1.5rem;\n  padding: 20px;\n  background-color: #fffbf6;\n  border-radius: 7px;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\n    rgba(0, 0, 0, 0.3) 0px 30px 60px -30px,\n    rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;\n\n  a {\n    color: black;\n    text-decoration: none;\n  }\n\n  .title-style {\n    font-weight: bold;\n    font-size: 27px;\n    margin-left: 5px;\n    margin-bottom: 13px;\n\n    @media (max-width: 850px) {\n      font-size: 21px;\n    }\n  }\n\n  .info-style {\n    display: flex;\n    align-items: center;\n    gap: 5px;\n    margin-top: 1rem;\n\n    .author-style {\n      font-size: 20px;\n\n      @media (max-width: 850px) {\n        font-size: 17px;\n      }\n    }\n\n    .date-style {\n      color: gray;\n      font-size: 18px;\n\n      @media (max-width: 850px) {\n        font-size: 16px;\n      }\n    }\n\n    @media (max-width: 850px) {\n      margin-top: 7px;\n    }\n  }\n\n  .content-style {\n    margin-left: 5px;\n    font-size: 22px;\n\n    @media (max-width: 850px) {\n      font-size: 19px;\n    }\n  }\n\n  .photo-style {\n    margin-top: 1rem;\n    border-radius: 10px;\n  }\n`;\n\nexport { ListDiv, ListItem };\n","import styled from \"@emotion/styled\";\n\nconst PostDiv = styled.div`\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n  max-width: 850px;\n  margin: 0 auto;\n\n  @media (max-width: 850px) {\n    width: 90%;\n  }\n`;\n\nconst Post = styled.div`\n  width: 100%;\n  height: auto;\n  min-height: 120px;\n  margin-top: 5vh;\n  margin-bottom: 1vh;\n  padding: 20px;\n  background-color: #fffbf6;\n  border-radius: 7px;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\n    rgba(0, 0, 0, 0.3) 0px 30px 60px -30px,\n    rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;\n`;\n\nconst BtnDiv = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  gap: 10px;\n`;\n\nexport { PostDiv, Post, BtnDiv };\n","import React from \"react\";\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { BtnDiv } from \"../PostCSS\";\nimport { ListDiv, ListItem } from \"../List/ListCSS\";\nimport Avatar from \"react-avatar\";\nimport moment from \"moment\";\nimport { FillBtn } from \"../../UI/Button\";\nimport { RootState } from \"../../../reducer/store\";\nimport { PostInfo } from \"../../../types/interfaces\";\nimport Swal from \"sweetalert2\";\nimport Toast from \"../../UI/Toast/Toast\";\n\nconst Detail: React.FC<PostInfo> = (props) => {\n  const params = useParams();\n  const navigate = useNavigate();\n  const user = useSelector((state: RootState) => state.user);\n\n  const DeleteHandler = () => {\n    Swal.fire({\n      icon: \"warning\",\n      text: \"정말로 삭제하시겠습니까?\",\n      showCancelButton: true,\n      confirmButtonText: \"확인\",\n      cancelButtonText: \"취소\",\n      confirmButtonColor: \"#50577a\",\n      cancelButtonColor: \"#BEBCBA\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const body = { postNum: params.postNum };\n        axios\n          .post(\"/api/post/delete\", body)\n          .then((response) => {\n            if (response.data.success) {\n              Toast.fire({\n                icon: \"success\",\n                text: \"게시글이 삭제되었습니다.\",\n              }).then(() => {\n                navigate(\"/\");\n              });\n            }\n          })\n          .catch((err) => {\n            Toast.fire({\n              icon: \"error\",\n              text: \"게시글 삭제에 실패하였습니다.\",\n            });\n          });\n      }\n    });\n  };\n\n  const setTime = (a: Date, b: Date) => {\n    if (a !== b) {\n      return moment(b).format(\"YYYY년 MMMM Do, HH:mm\") + \" (수정됨)\";\n    } else {\n      return moment(a).format(\"YYYY년 MMMM Do, HH:mm\");\n    }\n  };\n\n  return (\n    <ListDiv>\n      <ListItem>\n        <p className=\"title-style\">{props.postInfo.title}</p>\n        <p className=\"content-style\">{props.postInfo.content}</p>\n        <p className=\"info-style\">\n          <Avatar size=\"40\" round={true} src={props.postInfo.author.photoURL} />\n          <div>\n            <p className=\"author-style\">{props.postInfo.author.displayName}</p>\n            <p className=\"date-style\">\n              {setTime(props.postInfo.createdAt, props.postInfo.updatedAt)}\n            </p>\n          </div>\n        </p>\n        {props.postInfo.image ? (\n          <img\n            className=\"photo-style\"\n            src={props.postInfo.image}\n            alt=\"\"\n            style={{ width: \"100%\", height: \"auto\" }}\n          />\n        ) : null}\n      </ListItem>\n      {user.uid === props.postInfo.author.uid && (\n        <BtnDiv>\n          <Link to={`/edit/${props.postInfo.postNum}`}>\n            <FillBtn className=\"edit\">수정</FillBtn>\n          </Link>\n          <FillBtn className=\"delete\" onClick={() => DeleteHandler()}>\n            삭제\n          </FillBtn>\n        </BtnDiv>\n      )}\n    </ListDiv>\n  );\n};\n\nexport default Detail;\n","import styled from \"@emotion/styled\";\n\nconst RepleAreaDiv = styled.div`\n  padding-bottom: 1rem;\n  max-width: 850px;\n  margin: 0 auto;\n\n  div {\n    color: white;\n    margin-bottom: 1rem;\n    font-size: 24px;\n  }\n\n  @media (max-width: 850px) {\n    width: 90%;\n  }\n`;\n\nconst RepleUploadDiv = styled.div`\n  width: 100%;\n\n  form {\n    width: 100%;\n    display: grid;\n    grid-template-columns: 9fr 1fr;\n    grid-template-rows: 45px;\n\n    @media (max-width: 850px) {\n      grid-template-columns: 4fr 1fr;\n      grid-template-rows: 40px;\n    }\n\n    input {\n      padding: 5px 10px;\n      height: 100%;\n      border-radius: 7px 0px 0px 7px;\n      border: none;\n      box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\n        rgba(0, 0, 0, 0.3) 0px 30px 60px -30px,\n        rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;\n\n      &:active,\n      &:focus {\n        outline: none;\n      }\n    }\n\n    button {\n      height: 100%;\n      border-radius: 0px 7px 7px 0px;\n      border: none;\n      font-weight: bold;\n      background-color: #50577a;\n      color: white;\n      font-size: 18px;\n      box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\n        rgba(0, 0, 0, 0.3) 0px 30px 60px -30px,\n        rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;\n\n      &:hover,\n      &:active {\n        border: none;\n        background-color: #414763;\n      }\n    }\n  }\n`;\n\nconst RepleListDiv = styled.div`\n  margin-top: 1rem;\n`;\n\nconst RepleContentDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 0 1rem;\n  background-color: #fffbf6;\n  border-radius: 7px;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\n    rgba(0, 0, 0, 0.3) 0px 30px 60px -30px,\n    rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;\n\n  .content-style {\n    display: flex;\n    justify-content: space-between;\n    color: black;\n    margin-top: 1rem;\n    margin-bottom: 0;\n\n    @media (max-width: 850px) {\n      font-size: 22px;\n    }\n\n    .edit-style {\n      width: 100%;\n      height: 100%;\n      display: flex;\n      flex-direction: column;\n\n      input {\n        width: 97%;\n        border-radius: 5px;\n        border: none;\n        background-color: white;\n        box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\n        margin-bottom: 10px;\n        padding: 3px 10px;\n        font-size: 20px;\n      }\n\n      .button-style {\n        display: flex;\n        gap: 10px;\n      }\n    }\n  }\n\n  > .info-style {\n    display: flex;\n    gap: 10px;\n    color: black;\n    margin-bottom: 0;\n\n    .author {\n      font-size: 20px;\n      margin-top: 3px;\n\n      @media (max-width: 850px) {\n        font-size: 18px;\n      }\n    }\n\n    .time {\n      font-size: 18px;\n      color: gray;\n      margin-top: 3px;\n\n      @media (max-width: 850px) {\n        font-size: 16px;\n      }\n    }\n  }\n\n  .modalControl {\n    cursor: pointer;\n    position: relative;\n\n    span {\n      font-size: 20px;\n    }\n    .modalDiv {\n      position: absolute;\n      top: 25px;\n      right: 5px;\n      width: 65px;\n      height: 65px;\n      overflow: hidden;\n      padding: 7px;\n      cursor: pointer;\n      display: flex;\n      flex-direction: column;\n      align-content: center;\n      justify-content: space-between;\n      align-items: center;\n      font-weight: bold;\n\n      background-color: #ffeaca;\n      box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\n        rgba(0, 0, 0, 0.2) 0px 30px 60px -30px,\n        rgba(10, 37, 64, 0.2) 0px -2px 6px 0px inset;\n      border-radius: 10px;\n\n      p {\n        color: #5f5f5f;\n        cursor: pointer;\n        &.delete {\n          color: #ee6a6a;\n        }\n      }\n    }\n  }\n`;\n\nexport { RepleAreaDiv, RepleUploadDiv, RepleListDiv, RepleContentDiv };\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { RepleUploadDiv } from \"./RepleCSS\";\nimport Toast from \"../UI/Toast/Toast\";\nimport Swal from \"sweetalert2\";\nimport { RootState } from \"../../reducer/store\";\nimport { PostId } from \"../../types/interfaces\";\n\nconst RepleUpload = (props: PostId) => {\n  const [reple, setReple] = useState(\"\");\n  const user = useSelector((state: RootState) => state.user);\n\n  const SubmitHandler = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) => {\n    e.preventDefault();\n\n    if (!reple) {\n      return Toast.fire({\n        position: \"bottom\",\n        icon: \"warning\",\n        text: \"댓글 내용을 채워주세요.\",\n      });\n    }\n\n    const body = {\n      reple,\n      uid: user.uid,\n      postId: props.postId,\n    };\n\n    axios.post(\"/api/reple/submit\", body).then((response) => {\n      if (response.data.success) {\n        Swal.fire({\n          icon: \"success\",\n          text: \"댓글을 등록하였습니다.\",\n        }).then(() => {\n          window.location.reload();\n        });\n      } else {\n        Toast.fire({\n          position: \"bottom\",\n          icon: \"error\",\n          text: \"댓글 작성에 실패하였습니다.\",\n        });\n      }\n    });\n  };\n\n  return (\n    <RepleUploadDiv>\n      <form>\n        <input\n          type=\"text\"\n          value={reple}\n          onChange={(e) => setReple(e.currentTarget.value)}\n        />\n        <button onClick={(e) => SubmitHandler(e)}>⏎</button>\n      </form>\n    </RepleUploadDiv>\n  );\n};\n\nexport default RepleUpload;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { RepleContentDiv } from \"./RepleCSS\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport Avatar from \"react-avatar\";\nimport moment from \"moment\";\nimport Swal from \"sweetalert2\";\nimport { LightBtn } from \"../UI/Button\";\nimport { RootState } from \"../../reducer/store\";\nimport { RepleType } from \"../../types/interfaces\";\n\nconst RepleContent = (props: RepleType) => {\n  const ref = useRef<HTMLInputElement>(null);\n  const user = useSelector((state: RootState) => state.user);\n  const [modalFlag, setModalFlag] = useState(false);\n  const [editFlag, setEditFlag] = useState(false);\n  const [reple, setReple] = useState(props.reple.reple);\n\n  useOnClickOutside(ref, () => setModalFlag(false));\n\n  const SubmitHandler = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) => {\n    e.preventDefault();\n    const body = {\n      uid: user.uid,\n      reple,\n      postId: props.reple.postId,\n      repleId: props.reple._id,\n    };\n\n    axios.post(\"/api/reple/edit\", body).then((response) => {\n      if (response.data.success) {\n        Swal.fire({\n          icon: \"success\",\n          text: \"댓글을 수정하였습니다.\",\n        }).then(() => {\n          window.location.reload();\n        });\n      } else {\n        Swal.fire({\n          icon: \"error\",\n          text: \"댓글 수정에 실패하였습니다.\",\n        }).then(() => {\n          window.location.reload();\n        });\n      }\n    });\n  };\n\n  const DeleteHandler = (\n    e: React.MouseEvent<HTMLParagraphElement, MouseEvent>,\n  ) => {\n    e.preventDefault();\n\n    Swal.fire({\n      icon: \"warning\",\n      text: \"정말로 삭제하시겠습니까?\",\n      showCancelButton: true,\n      confirmButtonText: \"확인\",\n      cancelButtonText: \"취소\",\n      confirmButtonColor: \"#50577a\",\n      cancelButtonColor: \"#BEBCBA\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const body = { repleId: props.reple._id, postId: props.reple.postId };\n\n        axios\n          .post(\"/api/reple/delete\", body)\n          .then((response) => {\n            if (response.data.success) {\n              Swal.fire({\n                icon: \"success\",\n                text: \"댓글이 삭제되었습니다.\",\n              }).then(() => {\n                window.location.reload();\n              });\n            }\n          })\n          .catch((err) => {\n            Swal.fire({\n              icon: \"error\",\n              text: \"댓글 삭제에 실패하였습니다.\",\n            }).then(() => {\n              window.location.reload();\n            });\n          });\n      }\n    });\n  };\n\n  const setTime = (a: Date, b: Date) => {\n    if (a !== b) {\n      return moment(b).format(\"YYYY년 MMMM Do, HH:mm\") + \" (수정됨)\";\n    } else {\n      return moment(a).format(\"YYYY년 MMMM Do, HH:mm\");\n    }\n  };\n\n  const handleQuitEdit = () => {\n    setEditFlag(false);\n    setReple(props.reple.reple);\n  };\n\n  return (\n    <RepleContentDiv>\n      <div className=\"content-style\">\n        {editFlag ? (\n          <form className=\"edit-style\">\n            <input\n              type=\"text\"\n              value={reple}\n              onChange={(e) => setReple(e.currentTarget.value)}\n            />\n            <div className=\"button-style\">\n              <LightBtn onClick={handleQuitEdit}>취소</LightBtn>\n              <LightBtn onClick={(e) => SubmitHandler(e)}>수정 완료</LightBtn>\n            </div>\n          </form>\n        ) : (\n          <p className=\"reple-style\">{props.reple.reple}</p>\n        )}\n        {props.reple.author.uid === user.uid && (\n          <div className=\"modalControl\">\n            <span onClick={() => setModalFlag(true)}>🛠</span>\n            {modalFlag && (\n              <div className=\"modalDiv\" ref={ref}>\n                <p\n                  onClick={() => {\n                    setEditFlag(true);\n                    setModalFlag(false);\n                  }}\n                >\n                  수정\n                </p>\n                <p className=\"delete\" onClick={(e) => DeleteHandler(e)}>\n                  삭제\n                </p>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n      <div className=\"info-style\">\n        <Avatar size=\"30\" round={true} src={props.reple.author.photoURL} />\n\n        <p className=\"author\">{props.reple.author.displayName}</p>\n        <p className=\"time\">\n          {setTime(props.reple.createdAt, props.reple.updatedAt)}\n        </p>\n      </div>\n    </RepleContentDiv>\n  );\n};\n\n// // 모달 밖 클릭시 모달창 닫히도록 하는 Hook\nfunction useOnClickOutside(ref: any, handler: any) {\n  useEffect(() => {\n    const listener = (event: any) => {\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n      handler(event);\n    };\n    document.addEventListener(\"mousedown\", listener);\n    document.addEventListener(\"touchstart\", listener);\n    return () => {\n      document.removeEventListener(\"mousedown\", listener);\n      document.removeEventListener(\"touchstart\", listener);\n    };\n  }, [ref, handler]);\n}\n\nexport default RepleContent;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport RepleContent from \"./RepleContent\";\nimport { RepleListDiv } from \"./RepleCSS\";\nimport { PostId, RepleListType } from \"../../types/interfaces\";\n\nconst RepleList = (props: PostId) => {\n  const [repleList, setRepleList] = useState<RepleListType[]>([]);\n\n  useEffect(() => {\n    const body = { postId: props.postId };\n    axios.post(\"/api/reple/getReple\", body).then((response) => {\n      if (response.data.success) {\n        setRepleList([...response.data.repleList]);\n      }\n    });\n  }, []);\n\n  return (\n    <RepleListDiv>\n      {repleList.map((reple, idx) => {\n        return <RepleContent reple={reple} key={idx} />;\n      })}\n    </RepleListDiv>\n  );\n};\n\nexport default RepleList;\n","import React from \"react\";\nimport RepleUpload from \"./RepleUpload\";\nimport RepleList from \"./RepleList\";\nimport { useSelector } from \"react-redux\";\nimport { RepleAreaDiv } from \"./RepleCSS\";\nimport { RootState } from \"../../reducer/store\";\nimport { PostId } from \"../../types/interfaces\";\n\nconst RepleArea = (props: PostId) => {\n  const user = useSelector((state: RootState) => state.user);\n\n  return (\n    <RepleAreaDiv>\n      <div>💡 댓글</div>\n      {user.accessToken && <RepleUpload postId={props.postId} />}\n      <RepleList postId={props.postId} />\n    </RepleAreaDiv>\n  );\n};\n\nexport default RepleArea;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Detail from \"./Detail/Detail\";\nimport RepleArea from \"../reple/RepleArea\";\nimport Spinner from \"../layout/Spinner\";\nimport { PostListType } from \"../../types/interfaces\";\n\nconst PostArea = () => {\n  const params = useParams();\n\n  const [postInfo, setPostInfo] = useState<PostListType>(Object);\n  const [flag, setFlag] = useState(false);\n\n  useEffect(() => {\n    const body = { postNum: params.postNum };\n    axios\n      .post(\"/api/post/detail\", body)\n      .then((response) => {\n        if (response.data.success) {\n          setPostInfo(response.data.post);\n          setFlag(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <div>\n      {flag ? (\n        <>\n          <Detail postInfo={postInfo} />\n          <RepleArea postId={postInfo._id} />\n        </>\n      ) : (\n        <Spinner />\n      )}\n    </div>\n  );\n};\n\nexport default PostArea;\n"],"names":["FillBtn","styled","LightBtn","MoreBtn","LoginBtn","NicknameBtn","Swal","toast","position","showConfirmButton","timer","timerProgressBar","width","didOpen","addEventListener","ListDiv","ListItem","BtnDiv","props","a","b","params","useParams","navigate","useNavigate","user","useSelector","state","className","postInfo","title","content","size","round","src","author","photoURL","displayName","createdAt","updatedAt","moment","format","image","alt","style","height","uid","to","postNum","onClick","icon","text","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","then","result","isConfirmed","body","axios","response","data","success","Toast","catch","err","RepleAreaDiv","RepleUploadDiv","RepleListDiv","RepleContentDiv","useState","reple","setReple","type","value","onChange","e","currentTarget","preventDefault","postId","window","location","reload","SubmitHandler","ref","useRef","modalFlag","setModalFlag","editFlag","setEditFlag","handler","useEffect","listener","event","current","contains","target","document","removeEventListener","useOnClickOutside","repleId","_id","DeleteHandler","repleList","setRepleList","map","idx","accessToken","Object","setPostInfo","flag","setFlag","post","console","log","Spinner"],"sourceRoot":""}
{"version":3,"file":"static/js/300.1724052c.chunk.js","mappings":"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","sources":["components/UI/Toast/Toast.ts","components/post/Edit/Edit.tsx","components/post/Upload/ImageUpload.tsx","components/post/Upload/UploadCSS.ts"],"sourcesContent":["import Swal from \"sweetalert2\";\nimport \"../Toast/Toast.css\";\n\nconst Toast = Swal.mixin({\n  toast: true,\n  position: \"top\",\n  showConfirmButton: false,\n  timer: 2000,\n  timerProgressBar: true,\n  width: \"370px\",\n  didOpen: (toast) => {\n    toast.addEventListener(\"mouseenter\", Swal.stopTimer);\n    toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\n  },\n});\n\nexport default Toast;\n","import React, { useState, useEffect } from \"react\";\nimport ImageUpload from \"../Upload/ImageUpload\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { UploadDiv, UploadForm, UploadButtonDiv } from \"../Upload/UploadCSS\";\nimport { PostListType } from \"../../../types/interfaces\";\nimport Toast from \"../../UI/Toast/Toast\";\n\nconst Edit = () => {\n  const params = useParams();\n  const navigate = useNavigate();\n\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n\n  const [postInfo, setPostInfo] = useState<PostListType>(Object);\n  const [flag, setFlag] = useState(false);\n\n  useEffect(() => {\n    const body = { postNum: params.postNum };\n    axios\n      .post(\"/api/post/detail\", body)\n      .then((response) => {\n        if (response.data.success) {\n          setPostInfo(response.data.post);\n          setFlag(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n  console.log(postInfo.title);\n\n  // input란에 초기 데이터 넣어주기\n  useEffect(() => {\n    setTitle(postInfo.title);\n    setContent(postInfo.content);\n    setImage(postInfo.image);\n  }, [postInfo]);\n\n  const onSubmit = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault();\n\n    if (title === \"\" || content === \"\") {\n      return Toast.fire({\n        icon: \"warning\",\n        text: \"모든 항목을 채워주세요!\",\n      });\n    }\n\n    const body = {\n      title,\n      content,\n      image,\n      postNum: params.postNum,\n    };\n\n    axios\n      .post(\"/api/post/edit\", body)\n      .then((response) => {\n        if (response.data.success) {\n          Toast.fire({\n            icon: \"success\",\n            text: \"글 수정이 완료되었습니다.\",\n          });\n          navigate(`/post/${params.postNum}`);\n        } else {\n          Toast.fire({\n            icon: \"error\",\n            text: \"글 수정에 실패하였습니다.\",\n          });\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <UploadDiv>\n      <UploadForm>\n        <div className=\"title-style\">\n          <label htmlFor=\"title\">제목</label>\n          <input\n            id=\"title\"\n            type=\"text\"\n            value={title}\n            onChange={(e) => {\n              setTitle(e.currentTarget.value);\n            }}\n          />\n        </div>\n        <ImageUpload setImage={setImage} />\n        <label htmlFor=\"content\">내용</label>\n        <textarea\n          id=\"content\"\n          value={content}\n          onChange={(e) => {\n            setContent(e.currentTarget.value);\n          }}\n        />\n        <UploadButtonDiv>\n          <button\n            className=\"cancel\"\n            onClick={(e) => {\n              e.preventDefault();\n              navigate(-1); // 뒤로가기\n            }}\n          >\n            취소\n          </button>\n          <button onClick={(e) => onSubmit(e)}>제출</button>\n        </UploadButtonDiv>\n      </UploadForm>\n    </UploadDiv>\n  );\n};\n\nexport default Edit;\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport axios from \"axios\";\n\ntype Props = {\n  setImage: (data: string) => void;\n};\n\nconst ImageUpload = (props: Props) => {\n  const FileUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const formData: any = new FormData();\n    formData?.append(\"file\", e.target.files?.[0]);\n\n    axios.post(\"/api/post/image/upload\", formData).then((response) => {\n      props.setImage(response.data.filePath);\n    });\n  };\n\n  return (\n    <div>\n      <Form.Control\n        type=\"file\"\n        className=\"shadow-none\"\n        accept=\"image/*\"\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => FileUpload(e)}\n      />\n      {/* accept 속성: 어떤 유형의 파일을 input 태그로 관리할지 지정 가능  */}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import styled from \"@emotion/styled\";\n\nconst UploadDiv = styled.div`\n  max-width: 850px;\n  margin: 0 auto;\n  padding: 2rem 0;\n\n  @media (max-width: 850px) {\n    width: 90%;\n  }\n`;\n\nconst UploadForm = styled.form`\n  display: flex;\n  flex-direction: column;\n\n  label {\n    font-weight: bold;\n    margin: 20px 0 10px;\n    color: white;\n  }\n\n  .title-style {\n    width: 100%;\n\n    #title {\n      width: 96.4%;\n      margin-left: 10px;\n      border-radius: 7px;\n      border: none;\n      padding: 5px 10px;\n      margin-bottom: 10px;\n      box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\n        rgba(0, 0, 0, 0.3) 0px 30px 60px -30px,\n        rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;\n\n      &:active,\n      &:focus {\n        outline: none;\n      }\n    }\n  }\n\n  textarea {\n    min-height: 350px;\n    resize: none;\n    border-radius: 10px;\n    border: 1px solid #c6c6c6;\n    padding: 10px;\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\n      rgba(0, 0, 0, 0.3) 0px 30px 60px -30px,\n      rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;\n\n    &:active,\n    &:focus {\n      outline: none;\n    }\n\n    &::-webkit-scrollbar {\n      width: 10px;\n    }\n    &::-webkit-scrollbar-thumb {\n      background-color: gray;\n      border-radius: 15px;\n      background-clip: padding-box;\n      border: 2px solid transparent;\n    }\n\n    &::-webkit-scrollbar-track {\n      background-color: #c6c6c6;\n      border-radius: 15px;\n      box-shadow: inset 0px 0px 5px whitesmoke;\n    }\n  }\n`;\n\nconst UploadButtonDiv = styled.div`\n  margin-top: 10px;\n  display: flex;\n  justify-content: flex-end;\n  gap: 10px;\n\n  button {\n    max-width: 850px;\n    margin: 1rem 0 3rem 0;\n    border-radius: 20px;\n    padding: 10px;\n    border: none;\n    background-color: #50577a;\n    color: white;\n    font-weight: bold;\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\n      rgba(0, 0, 0, 0.3) 0px 30px 60px -30px,\n      rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;\n\n    &:hover {\n      background-color: #414763;\n    }\n  }\n`;\n\nexport { UploadDiv, UploadForm, UploadButtonDiv };\n"],"names":["Swal","toast","position","showConfirmButton","timer","timerProgressBar","width","didOpen","addEventListener","params","useParams","navigate","useNavigate","useState","title","setTitle","content","setContent","image","setImage","Object","postInfo","setPostInfo","setFlag","useEffect","body","postNum","axios","then","response","data","success","post","catch","err","console","log","className","htmlFor","id","type","value","onChange","e","currentTarget","onClick","preventDefault","Toast","icon","text","onSubmit","props","accept","formData","FormData","append","target","files","filePath","FileUpload","UploadDiv","styled","UploadForm","UploadButtonDiv"],"sourceRoot":""}
{"version":3,"file":"static/js/673.bfecaf41.chunk.js","mappings":"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","sources":["components/UI/Button.ts","components/post/List/List.tsx","components/main/MainCss.ts","components/main/MainPage.tsx","components/post/List/ListCSS.ts"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const FillBtn = styled.button`\n  background-color: #50577a;\n  color: white;\n  border-radius: 5px;\n  border: none;\n  padding: 9px 13px;\n  font-weight: bold;\n  font-size: 21px;\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px;\n\n  &:hover {\n    background-color: #464c6b;\n  }\n`;\n\nexport const LightBtn = styled.button`\n  background-color: #ffeaca;\n  color: #767474;\n  border-radius: 5px;\n  border: none;\n  padding: 6px 10px;\n  font-weight: bold;\n  font-size: 21px;\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 3px 6px, rgba(0, 0, 0, 0.1) 0px 3px 6px;\n\n  &:hover {\n    background-color: #464c6b;\n  }\n`;\n\nexport const MoreBtn = styled.button`\n  background-color: #50577a;\n  color: white;\n  border-radius: 50px;\n  border: none;\n  margin: 1rem 0 3rem 0;\n  padding: 1rem;\n  font-weight: bold;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\n    rgba(0, 0, 0, 0.3) 0px 30px 60px -30px,\n    rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;\n\n  &:hover {\n    background-color: #414763;\n  }\n`;\n\nexport const LoginBtn = styled.button`\n  border-radius: 20px;\n  padding: 10px;\n  background-color: #444c74;\n  color: white;\n  border: 1px solid black;\n  margin-top: 10px;\n  font-weight: bold;\n\n  &:hover {\n    background-color: #5c679a;\n    color: white;\n    border: 1px solid black;\n  }\n`;\n\nexport const NicknameBtn = styled(LoginBtn)`\n  margin: 0 auto;\n  margin-top: 10px;\n  margin-bottom: 15px;\n  width: auto;\n  padding: 7px 10px;\n`;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ListDiv, ListItem } from \"./ListCSS\";\nimport Avatar from \"react-avatar\";\nimport moment from \"moment\";\nimport \"moment/locale/ko\";\nimport { PostList } from \"../../../types/interfaces\";\n\nconst List: React.FC<PostList> = (props) => {\n  const setTime = (a: Date, b: Date) => {\n    if (a !== b) {\n      return moment(b).format(\"YYYYÎÖÑ MMMM Do, HH:mm\") + \" (ÏàòÏ†ïÎê®)\";\n    } else {\n      return moment(a).format(\"YYYYÎÖÑ MMMM Do, HH:mm\");\n    }\n  };\n\n  return (\n    <ListDiv>\n      {props.postList.map((post, idx) => {\n        return (\n          <ListItem key={idx}>\n            <Link to={`/post/${post.postNum}`}>\n              <p className=\"title-style\">{post.title}</p>\n              <p className=\"content-style\">{post.content}</p>\n              <div className=\"info-style\">\n                <Avatar size=\"40\" round={true} src={post.author.photoURL} />\n                <div>\n                  <p className=\"author-style\">{post.author.displayName}</p>\n                  <p className=\"date-style\">\n                    {setTime(post.createdAt, post.updatedAt)}\n                  </p>\n                </div>\n              </div>\n            </Link>\n          </ListItem>\n        );\n      })}\n    </ListDiv>\n  );\n};\n\nexport default List;\n","import styled from \"@emotion/styled\";\n\nconst MainDiv = styled.div`\n  max-width: 850px;\n  margin: 0 auto;\n  margin-top: 3rem;\n\n  > .title-style {\n    text-align: center;\n    color: #fffbf6;\n    font-size: 25px;\n    letter-spacing: 2px;\n    margin-bottom: 10px;\n\n    span {\n      font-size: 18px;\n    }\n\n    @media (max-width: 850px) {\n      display: none;\n    }\n  }\n\n  @media (max-width: 850px) {\n    margin-top: 2rem;\n  }\n`;\n\nconst FilterDiv = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 10px;\n  margin: 0 auto;\n  margin-top: 2rem;\n\n  input {\n    width: 230px;\n    height: 40px;\n    padding: 3px 5px 3px 10px;\n    border: none;\n    border-radius: 5px;\n  }\n\n  @media (max-width: 850px) {\n    width: 90%;\n  }\n`;\n\nconst DropdownDiv = styled.div`\n  .dropdown-toggle {\n    font-size: 20px;\n    letter-spacing: 3px;\n  }\n\n  .dropdown-menu {\n    --bs-dropdown-min-width: 6rem;\n  }\n\n  .dropdown-item {\n    font-size: 17px;\n    text-align: center;\n    letter-spacing: 3px;\n  }\n`;\n\nconst ButtonDiv = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport { MainDiv, FilterDiv, DropdownDiv, ButtonDiv };\n","import React, { useEffect, useState } from \"react\";\nimport List from \"../post/List/List\";\nimport axios from \"axios\";\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\nimport { MainDiv, FilterDiv, DropdownDiv, ButtonDiv } from \"./MainCss\";\nimport { MoreBtn } from \"../UI/Button\";\nimport { PostListType } from \"../../types/interfaces\";\n\nconst MainPage = () => {\n  const [postList, setPostList] = useState<PostListType[]>([]);\n  const [sort, setSort] = useState(\"ÏµúÏã†Ïàú\");\n  const [search, setSearch] = useState(\"\");\n  const [skip, setSkip] = useState(0);\n  const [loadMore, setLoadMore] = useState(true);\n\n  // ÎçîÎ∂àÎü¨Ïò§Í∏∞ Î≤ÑÌäº ÌÅ¥Î¶≠Ïãú Î≥¥Ïó¨ÏßÄÎäî Í≤åÏãúÎ¨º Ï†ïÎ†¨\n  const getPostLoadMore = () => {\n    const body = {\n      sort,\n      search,\n      skip,\n    };\n    axios\n      .post(\"/api/post/list\", body)\n      .then((response) => {\n        if (response.data.success) {\n          setPostList([...postList, ...response.data.postList]);\n          setSkip(skip + response.data.postList.length);\n          if (response.data.postList.length < 5) {\n            setLoadMore(false);\n          }\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  // ÏµúÏã†Ïàú, Ïù∏Í∏∞Ïàú ÌïÑÌÑ∞ Ï†ÅÏö©Ïãú Î≥¥Ïó¨ÏßÄÎäî Í≤åÏãúÎ¨º Ï†ïÎ†¨\n  const getPostList = () => {\n    setSkip(0);\n    const body = {\n      sort,\n      search,\n      skip: 0,\n    };\n    axios\n      .post(\"/api/post/list\", body)\n      .then((response) => {\n        if (response.data.success) {\n          setPostList([...response.data.postList]);\n          setSkip(response.data.postList.length);\n          if (response.data.postList.length < 5) {\n            setLoadMore(false);\n          }\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    getPostList();\n  }, [sort]);\n\n  const SearchHandler = () => {\n    getPostList();\n  };\n\n  return (\n    <MainDiv>\n      <div className=\"title-style\">\n        Îß§Î≤à Îã¨ÎùºÏßÄÎäî Í∏∏Í±∞Î¶¨ÏùåÏãù ÏúÑÏπòÎ•º Ï∞æÎäêÎùº Î∂àÌé∏Ìï®ÏùÑ Í≤™ÏúºÏÖ®ÎÇòÏöî?{\" \"}\n        <span>ü§î</span>\n      </div>\n      <div className=\"title-style\">\n        Go!StreetÏóêÏÑú ÏûêÏú†Î°≠Í≤å Í∏∏Í±∞Î¶¨ÏùåÏãù ÏúÑÏπòÎ•º Í≥µÏú†Ìï¥Î≥¥ÏÑ∏Ïöî! ü´∂\n      </div>\n      <FilterDiv>\n        <DropdownDiv>\n          <DropdownButton\n            variant=\"secondary\"\n            title={sort}\n            size=\"sm\"\n            menuVariant=\"dark\"\n          >\n            <Dropdown.Item onClick={() => setSort(\"ÏµúÏã†Ïàú\")}>\n              ÏµúÏã†Ïàú\n            </Dropdown.Item>\n            <Dropdown.Divider />\n            <Dropdown.Item onClick={() => setSort(\"Ïù∏Í∏∞Ïàú\")}>\n              Ïù∏Í∏∞Ïàú\n            </Dropdown.Item>\n          </DropdownButton>\n        </DropdownDiv>\n        <div>\n          <input\n            type=\"text\"\n            value={search}\n            onChange={(e) => setSearch(e.currentTarget.value)}\n            onKeyDown={(e) => {\n              if (e.keyCode === 13) SearchHandler();\n            }}\n            placeholder=\"Í≤ÄÏÉâÏñ¥ ÏûÖÎ†• ÌõÑ enterÎ•º ÎàåÎü¨Ï£ºÏÑ∏Ïöî.\"\n          />\n        </div>\n      </FilterDiv>\n      <List postList={postList} />\n      {loadMore && (\n        <ButtonDiv>\n          <MoreBtn onClick={() => getPostLoadMore()}>Í∏Ä Îçî Î∂àÎü¨Ïò§Í∏∞ üëÄ</MoreBtn>\n        </ButtonDiv>\n      )}\n    </MainDiv>\n  );\n};\n\nexport default MainPage;\n","import styled from \"@emotion/styled\";\n\nconst ListDiv = styled.div`\n  padding: 1rem 0;\n  max-width: 850px;\n  margin: 0 auto;\n\n  @media (max-width: 850px) {\n    width: 90%;\n  }\n`;\n\nconst ListItem = styled.div`\n  width: 100%;\n  height: auto;\n  min-height: 120px;\n  margin-bottom: 1.5rem;\n  padding: 20px;\n  background-color: #fffbf6;\n  border-radius: 7px;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\n    rgba(0, 0, 0, 0.3) 0px 30px 60px -30px,\n    rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;\n\n  a {\n    color: black;\n    text-decoration: none;\n  }\n\n  .title-style {\n    font-weight: bold;\n    font-size: 27px;\n    margin-left: 5px;\n    margin-bottom: 13px;\n\n    @media (max-width: 850px) {\n      font-size: 21px;\n    }\n  }\n\n  .info-style {\n    display: flex;\n    align-items: center;\n    gap: 5px;\n    margin-top: 1rem;\n\n    .author-style {\n      font-size: 20px;\n\n      @media (max-width: 850px) {\n        font-size: 17px;\n      }\n    }\n\n    .date-style {\n      color: gray;\n      font-size: 18px;\n\n      @media (max-width: 850px) {\n        font-size: 16px;\n      }\n    }\n\n    @media (max-width: 850px) {\n      margin-top: 7px;\n    }\n  }\n\n  .content-style {\n    margin-left: 5px;\n    font-size: 22px;\n\n    @media (max-width: 850px) {\n      font-size: 19px;\n    }\n  }\n\n  .photo-style {\n    margin-top: 1rem;\n    border-radius: 10px;\n  }\n`;\n\nexport { ListDiv, ListItem };\n"],"names":["FillBtn","styled","LightBtn","MoreBtn","LoginBtn","NicknameBtn","props","postList","map","post","idx","to","postNum","className","title","content","size","round","src","author","photoURL","displayName","a","createdAt","b","updatedAt","moment","format","MainDiv","FilterDiv","DropdownDiv","ButtonDiv","useState","setPostList","sort","setSort","search","setSearch","skip","setSkip","loadMore","setLoadMore","getPostList","body","axios","then","response","data","success","length","catch","error","console","log","useEffect","DropdownButton","variant","menuVariant","Dropdown","onClick","type","value","onChange","e","currentTarget","onKeyDown","keyCode","placeholder","getPostLoadMore","ListDiv","ListItem"],"sourceRoot":""}
{"version":3,"file":"static/js/222.a4c33002.chunk.js","mappings":"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","sources":["components/UI/Button.ts","components/UI/Toast/Toast.ts","components/user/Register.tsx","components/user/UserCSS.ts"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const FillBtn = styled.button`\n  background-color: #50577a;\n  color: white;\n  border-radius: 5px;\n  border: none;\n  padding: 9px 13px;\n  font-weight: bold;\n  font-size: 21px;\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px;\n\n  &:hover {\n    background-color: #464c6b;\n  }\n`;\n\nexport const LightBtn = styled.button`\n  background-color: #ffeaca;\n  color: #767474;\n  border-radius: 5px;\n  border: none;\n  padding: 6px 10px;\n  font-weight: bold;\n  font-size: 21px;\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 3px 6px, rgba(0, 0, 0, 0.1) 0px 3px 6px;\n\n  &:hover {\n    background-color: #464c6b;\n  }\n`;\n\nexport const MoreBtn = styled.button`\n  background-color: #50577a;\n  color: white;\n  border-radius: 50px;\n  border: none;\n  margin: 1rem 0 3rem 0;\n  padding: 1rem;\n  font-weight: bold;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\n    rgba(0, 0, 0, 0.3) 0px 30px 60px -30px,\n    rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;\n\n  &:hover {\n    background-color: #414763;\n  }\n`;\n\nexport const LoginBtn = styled.button`\n  border-radius: 20px;\n  padding: 10px;\n  background-color: #444c74;\n  color: white;\n  border: 1px solid black;\n  margin-top: 10px;\n  font-weight: bold;\n\n  &:hover {\n    background-color: #5c679a;\n    color: white;\n    border: 1px solid black;\n  }\n`;\n\nexport const NicknameBtn = styled(LoginBtn)`\n  margin: 0 auto;\n  margin-top: 10px;\n  margin-bottom: 15px;\n  width: auto;\n  padding: 7px 10px;\n`;\n","import Swal from \"sweetalert2\";\nimport \"../Toast/Toast.css\";\n\nconst Toast = Swal.mixin({\n  toast: true,\n  position: \"top\",\n  showConfirmButton: false,\n  timer: 2000,\n  timerProgressBar: true,\n  width: \"370px\",\n  didOpen: (toast) => {\n    toast.addEventListener(\"mouseenter\", Swal.stopTimer);\n    toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\n  },\n});\n\nexport default Toast;\n","import React, { useState } from \"react\";\nimport LoginDiv from \"./UserCSS\";\nimport firebase from \"../../firebase\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport Toast from \"../UI/Toast/Toast\";\nimport { LoginBtn, NicknameBtn } from \"../UI/Button\";\n\nconst Register = () => {\n  const navigate = useNavigate();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [pw, setPw] = useState(\"\");\n  const [pwConfirm, setPwConfirm] = useState(\"\");\n  const [flag, setFlag] = useState(false);\n  const [nameCheck, setNameCheck] = useState(false);\n  const [nameInfo, setNameInfo] = useState(\"\");\n\n  const RegisterFunc = async (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) => {\n    setFlag(true); // 회원가입 버튼 한번 클릭하면 flag를 true로 변경하여 버튼이 disabled 상태가 되도록 설정\n    e.preventDefault();\n\n    if (!(name && email && pw && pwConfirm)) {\n      return Toast.fire({\n        icon: \"warning\",\n        text: \"모든 칸을 채워주세요.\",\n      });\n    }\n\n    if (pw !== pwConfirm) {\n      return Toast.fire({\n        icon: \"warning\",\n        text: \"비밀번호와 비빌번호 확인 값은 같아야 합니다.\",\n      });\n    }\n\n    if (!nameCheck) {\n      return Toast.fire({\n        icon: \"warning\",\n        text: \"닉네임 중복검사를 진행해주세요.\",\n      });\n    }\n\n    const createdUser = await firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, pw);\n\n    await createdUser?.user?.updateProfile({\n      displayName: name,\n      photoURL:\n        \"https://kr.object.ncloudstorage.com/community-bucket/post/profile.png\",\n    });\n\n    const body = {\n      email: createdUser?.user?.multiFactor.user.email,\n      displayName: createdUser?.user?.multiFactor.user.displayName,\n      uid: createdUser?.user?.multiFactor.user.uid,\n      photoURL:\n        \"https://kr.object.ncloudstorage.com/community-bucket/post/profile.png\",\n    };\n\n    axios.post(\"/api/user/register\", body).then((response) => {\n      setFlag(false); // 회원가입이 완료되면 다시 버튼 활성화해주기\n      if (response.data.success) {\n        Toast.fire({\n          icon: \"success\",\n          text: \"Go!Street 회원가입을 축하드립니다 :>\",\n        }).then(() => {\n          navigate(\"/\");\n        });\n      } else {\n        return Toast.fire({\n          icon: \"error\",\n          text: \"회원가입에 실패하였습니다.\",\n        });\n      }\n    });\n  };\n\n  const NameCheckFunc = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) => {\n    e.preventDefault();\n    if (!name) {\n      return Toast.fire({\n        icon: \"warning\",\n        text: \"닉네임을 입력해주세요.\",\n      });\n    }\n\n    const body = { displayName: name };\n\n    axios.post(\"/api/user/namecheck\", body).then((response) => {\n      if (response.data.success) {\n        if (response.data.check) {\n          setNameCheck(true);\n          setNameInfo(\"사용가능한 닉네임입니다.\");\n        } else {\n          setNameInfo(\"사용불가능한 닉네임입니다.\");\n        }\n      }\n    });\n  };\n\n  return (\n    <LoginDiv>\n      <form>\n        <label>닉네임</label>\n        <input\n          className=\"nickname-input\"\n          type=\"name\"\n          value={name}\n          onChange={(e) => setName(e.currentTarget.value)}\n          disabled={nameCheck}\n        />\n        {nameInfo}\n        <NicknameBtn onClick={(e) => NameCheckFunc(e)}>\n          닉네임 중복검사\n        </NicknameBtn>\n\n        <label>이메일</label>\n        <input\n          type=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.currentTarget.value)}\n        />\n        <label>비밀번호</label>\n        <input\n          type=\"password\"\n          value={pw}\n          minLength={8}\n          onChange={(e) => setPw(e.currentTarget.value)}\n        />\n        <label>비밀번호 확인</label>\n        <input\n          type=\"password\"\n          value={pwConfirm}\n          minLength={8}\n          onChange={(e) => setPwConfirm(e.currentTarget.value)}\n        />\n        <LoginBtn disabled={flag} onClick={(e) => RegisterFunc(e)}>\n          회원가입\n        </LoginBtn>\n      </form>\n    </LoginDiv>\n  );\n};\n\nexport default Register;\n","import styled from \"@emotion/styled\";\n\nconst LoginDiv = styled.div`\n  width: 85%;\n  max-width: 350px;\n  margin: 0 auto;\n  margin-top: 4rem;\n  color: white;\n\n  form {\n    background-color: #1b1d25;\n    padding: 2rem;\n    border-radius: 10px;\n    box-shadow: 0px 19px 38px rgba(0, 0, 0, 0.03),\n      0px 15px 12px rgba(0, 0, 0, 0.1);\n\n    display: flex;\n    flex-direction: column;\n\n    label {\n      font-weight: bold;\n      margin-bottom: 10px;\n    }\n\n    input {\n      border-radius: 7px;\n      border: 1px solid #c6c6c6;\n      padding: 5px;\n      margin-bottom: 20px;\n\n      &:disabled {\n        background-color: #dddcdc;\n      }\n\n      &:active,\n      &:focus {\n        outline: none;\n      }\n    }\n    .nickname-input {\n      margin-bottom: 0;\n    }\n\n    @media (max-width: 756px) {\n      width: 100%;\n    }\n  }\n`;\n\nexport default LoginDiv;\n"],"names":["FillBtn","styled","LightBtn","MoreBtn","LoginBtn","NicknameBtn","Swal","toast","position","showConfirmButton","timer","timerProgressBar","width","didOpen","addEventListener","navigate","useNavigate","useState","name","setName","email","setEmail","pw","setPw","pwConfirm","setPwConfirm","flag","setFlag","nameCheck","setNameCheck","nameInfo","setNameInfo","RegisterFunc","e","preventDefault","Toast","icon","text","firebase","createUserWithEmailAndPassword","createdUser","user","updateProfile","displayName","photoURL","body","multiFactor","uid","axios","then","response","data","success","className","type","value","onChange","currentTarget","disabled","onClick","check","NameCheckFunc","minLength","LoginDiv"],"sourceRoot":""}